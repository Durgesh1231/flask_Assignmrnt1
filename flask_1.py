# -*- coding: utf-8 -*-
"""Flask 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vF0dQawF4fbJH70mw77OOl-CEwjVplYy
"""

"""
Ans 1.

Flask is a lightweight, web application framework for Python that is used to build web applications quickly and with minimal setup.
It is based on the Werkzeug WSGI toolkit and Jinja2 template engine.

Advantages of Flask:
- **Lightweight and Simple**: Flask is easy to set up and has a minimalistic design.
- **Flexible and Scalable**: Allows developers to build both simple and complex applications.
- **Modular**: Easily customizable, allowing for the addition of various extensions based on project needs.
- **Built-in Development Server**: Flask includes a built-in server, which is useful for local testing.
- **Supports RESTful API Development**: Flask is well-suited for building RESTful APIs.
"""

## Ans 2.

from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!!'

if __name__ == '__main__':
    app.run()

"""
Ans 3.

App routing in Flask refers to the process of defining routes (URLs) for different pages in a web application.
Routes are defined using the `@app.route()` decorator in Flask, which maps a URL path to a specific function.
This allows the web server to direct users to specific views or pages based on the URL path.

Uses:
- Allows organizing different pages in an application.
- Helps create dynamic and user-friendly URLs.
"""

# Ans 4.

@app.route('/welcome')
def welcome():
    return 'Welcome to ABC Corporation'

@app.route('/')
def company_details():
    return '''
    Company Name: ABC Corporation<br>
    Location: India<br>
    Contact Detail: 999-999-9999
    '''

if __name__ == '__main__':
    app.run()

"""
# After running the application, access `http://127.0.0.1:5000/` and `http://127.0.0.1:5000/welcome` in a browser.
# Take screenshots of each output to display the welcome message and company details.


## Ans 5.

The `url_for()` function in Flask is used for building URLs dynamically. It generates a URL for a specific function based on the function name.
This is useful for generating URLs consistently, especially when the URL structure changes.
"""

from flask import Flask, url_for

app = Flask(__name__)

@app.route('/')
def index():
    return 'This is the index page.'

@app.route('/welcome')
def welcome():
    return 'Welcome to ABC Corporation'

@app.route('/url_test')
def url_test():
    # Demonstrating the url_for() function
    index_url = url_for('index')
    welcome_url = url_for('welcome')
    return f'Index URL: {index_url}<br>Welcome URL: {welcome_url}'

if __name__ == '__main__':
    app.run()

"""

"""

